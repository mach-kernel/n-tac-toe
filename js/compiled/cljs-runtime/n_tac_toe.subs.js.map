{"version":3,"sources":["n_tac_toe/subs.cljs"],"mappings":";AAIA,2DAAA,3DAACA,6LAEA,WAAKC;AAAL,AACE,OAAA,mFAAOA;;AAEV,2DAAA,3DAACD,4MAEA,WAAKC,GAAGC;AAAR,AACE,OAAA,oGAAeD;;AAElB,2DAAA,3DAACD,2LAEA,WAAKC,GAAGC;AAAR,AACE,OAAA,mFAAOD;;AAEV,2DAAA,3DAACD,6LAEA,WAAKC,GAAGC;AAAR,AACE,OAAA,kFAAOD;;AAEV,2DAAA,3DAACD,kMAEA,WAAAG;AAAA,AAAA,IAAAC,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;cAAA,AAAAE,4CAAAF,eAAA,rEAAaG;WAAb,AAAAD,4CAAAF,eAAA,lEAAqBI;AAArB,AACE,IAAMC,IAAE,AAACC,gBAAM,AAAA,kFAAOF;AAAtB,AACE,IAAAG,mBAAIJ;AAAJ,AAAA,oBAAAI;AAAAA;;AAAA,0FAAa,AAACC,mBAASH,GACV,AAACG,mBAASH","names":["re_frame.core.reg_sub","db","_","p__37403","map__37404","cljs.core/--destructure-map","cljs.core.get","allowed","game","n","cljs.core/count","or__5045__auto__","cljs.core/rand-int"],"sourcesContent":["(ns n-tac-toe.subs\n  (:require\n   [re-frame.core :as re-frame]))\n\n(re-frame/reg-sub\n ::name\n (fn [db]\n   (:name db)))\n\n(re-frame/reg-sub\n ::active-panel\n (fn [db _]\n   (:active-panel db)))\n\n(re-frame/reg-sub\n ::game\n (fn [db _]\n   (:game db)))\n\n(re-frame/reg-sub\n ::win?\n (fn [db _]\n   (:win? db)))\n\n(re-frame/reg-sub\n ::allowed\n (fn [{:keys [allowed game]}]\n   (let [n (count (:rows game))]\n     (or allowed [(rand-int n)\n                  (rand-int n)]))))\n"]}